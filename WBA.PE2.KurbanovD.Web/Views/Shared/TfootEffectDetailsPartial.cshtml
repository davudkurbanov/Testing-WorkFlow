@model List<SkillEffects>
<tfoot>

    @foreach (var skillEffect in Model)
    {
        var effect = skillEffect.Effect;

        if (Model.Count == 1)
        {
            <tr>
                <th class="blackAndWhite text-center" colspan="3">Effect details</th>
            </tr>
        }
        else
        {
            <tr>
                <th class="blackAndWhite text-center" colspan="3">Effect details (@effect.EffectType)</th>
            </tr>
        }
        if (effect is Amplify)
        {
            var amplify = (Amplify)effect;
            <tr>
                <th>EffectType </th>
                <td>@amplify.EffectType</td>
            </tr>
            <tr>
                <th>@amplify.EffectType stat</th>
                <td>@amplify.AmplifyType</td>
            </tr>
            <tr>
                <th>Amount </th>
                <td>@amplify.Amount</td>

            </tr>
            <tr>
                <th>State  </th>
                <td>@amplify.EffectState</td>
            </tr>

            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Reduce)
        {
            var reduce = (Reduce)effect;
            <tr>
                <th>EffectType </th>
                <td> @reduce.EffectType</td>
            </tr>
            <tr>
                <th>@reduce.EffectType stat</th>
                <td>@reduce.ReduceType</td>
            </tr>
            <tr>
                <th>Amount  </th>
                <td>@reduce.ReduceAmount</td>
            </tr>
            <tr>
                <th>State  </th>
                <td>@reduce.EffectState</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is CriticalHit)
        {
            var criticalHit = (CriticalHit)effect;
            <tr>
                <th>EffectType </th>
                <td>@criticalHit.EffectType</td>
            </tr>
            <tr>
                <th>Chance to hit  </th>
                <td>@(criticalHit.CriticalProcChance)%</td>
            </tr>
            <tr>
                <th>Damage Multiplier  </th>
                <td>(@criticalHit.CriticalMultiplier)x</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is DealDamage)
        {
            var dealDamage = (DealDamage)effect;
            <tr>
                <th>EffectType </th>
                <td>@dealDamage.EffectType</td>
            </tr>
            <tr>
                <th>Damage type </th>
                <td>@dealDamage.DamageType</td>
            </tr>
            <tr>
                <th>Amount </th>
                <td>@dealDamage.DamageAmount</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Heal)
        {
            var heal = (Heal)effect;
            <tr>
                <th>EffectType </th>
                <td>@heal.EffectType</td>
            </tr>
            <tr>
                <th>Amount </th>
                <td>@heal.HealAmount</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Lifesteal)
        {
            var lifesteal = (Lifesteal)effect;
            <tr>
                <th>EffectType</th>
                <td>@lifesteal.EffectType</td>
            </tr>
            <tr>
                <th>Percentage  </th>
                <td>@(lifesteal.LifeStealPercentage)%</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Silence)
        {
            var silence = (Silence)effect;
            <tr>
                <th>EffectType</th>
                <td>@silence.EffectType</td>
            </tr>
            <tr>
                <th>Duration  </th>
                <td>@silence.EffectType</td>
            </tr>
            <tr>
                <th>State  </th>
                <td>@silence.EffectState</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Stun)
        {
            var stun = (Stun)effect;
            <tr>
                <th>EffectType</th>
                <td>@stun.EffectType</td>
            </tr>
            <tr>
                <th>Duration  </th>
                <td>@stun.StunDuration</td>
            </tr>
            <tr>
                <th>State  </th>
                <td>@stun.EffectState</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
        else if (effect is Summon)
        {
            var summon = (Summon)effect;
            <tr>
                <th>EffectType </th>
                <td>@summon.EffectType</td>
            </tr>
            <tr>
                <th>Amount </th>
                <td>@summon.AmountToSummon</td>
            </tr>
            <tr>
                <th>Summon  </th>
                <td>@skillEffect.Skill.Name</td>
            </tr>
            <partial name="TableTargetDescriptionPartial" model="skillEffect" />
        }
    }
</tfoot>
